package marge.frontend
import marge.syntax.Program2
import marge.syntax.Program2.{QName, RxGraph}
import marge.syntax.Parser2
import marge.backend.RxSemantics

object Main:
  def main(args: Array[String]): Unit =
    println("Iniciando testes...")

    // Chame suas funções de teste aqui
    testParser()
    println("\nTestes concluídos.")

  def testParser(): Unit =
    println("\n--- Testando o Parser ---")

    try



      val conditionalGraph2 = Parser2.parseProgram(
        """
          int a_active = 1
          int b_active = 0
          int offA_active = 0

          init s0

          s0 --> s1: a if (a_active == 1) then {
              b_active' := 1;
              if (offA_active == 1) then {
                  a_active' := 0
              }
          }
          s1 --> s0: b if (b_active == 1) offA_active' := 1
        """
      )
      println("\nGrafo com variável e condição parseado:")
      println(conditionalGraph2.toString)

    catch
      case e: Exception => println(s"Erro ao parsear: ${e.getMessage}")

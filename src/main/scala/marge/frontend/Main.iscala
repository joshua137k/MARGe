package marge.frontend
import marge.syntax.Program2
import marge.syntax.Program2.{QName, RxGraph}
import marge.syntax.Parser2
import marge.backend.RxSemantics

object Main:
  def main(args: Array[String]): Unit =
    println("Iniciando testes...")

    // Chame suas funções de teste aqui
    testParser()
    println("\nTestes concluídos.")

  def testParser(): Unit =
    println("\n--- Testando o Parser ---")

    try



      // CORRIGIDO: Usando a sintaxe 'if'
      val conditionalGraph = Parser2.parseProgram(
        """
          int counter = 0
          init start
          start --> middle: step1 if counter < 2
          middle --> endN: activateStep2 if counter == 1
        """
      )
      println("\nGrafo com variável e condição parseado:")
      println(conditionalGraph.toString)

      // CORRIGIDO: Usando a sintaxe 'if'
      val conditionalGraph2 = Parser2.parseProgram(
        """
          int counter = 0
          init start
          start --> middle: step1 if counter < 2 counter' := counter + 1
          middle --> endN: activateStep2 if counter == 1
        """
      )
      println("\nGrafo com variável e condição parseado:")
      println(conditionalGraph2.toString)

    catch
      case e: Exception => println(s"Erro ao parsear: ${e.getMessage}")
